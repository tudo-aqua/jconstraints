;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3/': 0.09005427360534668, 'smt_solvers/QF_S/cvc4/': 2.0732004642486572, 'smt_solvers/QF_S/z3seq/': 0.08561205863952637, 'smt_solvers/QF_S/z3str3fed/': 0.06886839866638184}
;  score   = 1.9831461906433105
;  stdout  = {'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.in.re (str.at (str.replace "j6rRP5\\(s_" var0 "s)tOA&,HiP") (str.indexof var1 var3 2)) (re.+ (re.+ re.allchar))))(assert (> (str.len var4) (str.len var0)))(assert (> (str.indexof var5 var5 (str.len (str.replace var4 var3 var5))) (str.indexof var2 var2 (str.indexof (str.at var3 (str.indexof (str.replace var5 var5 var0) (str.replace var3 var5 var0) (str.indexof var5 var1 var8))) (str.at var3 var9) (str.len var3)))))(assert (< var6 9))(assert (not (str.in.re var0 (re.+ (re.* re.allchar)))))(check-sat)